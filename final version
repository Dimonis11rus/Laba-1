#include <iostream>
#include <locale>
#include <cstdio>
#include <cstring>
#include <fstream>
#include <windows.h>
#define N 50

using namespace std;

char first[20], second[20], third[20], forth[20], fifth[20];
char del_mark[20], del_model[20];
int car_count=0, moto_count=0, bus_count=0;

class garage
{
public:
    garage() {}
    virtual void set_mark()=0;       ///Установка марки транспорта
    virtual void get_mark()=0;       ///Получение марки транспорта
    virtual void set_model()=0;      ///Установка модели транспорта
    virtual void get_model()=0;      ///Получение модели транспорта
    virtual void read_from_file()=0; ///Чтение из файла
    virtual void save_in_file()=0;   ///Запись в файл
    virtual ~garage() {};
};


class car : public garage
{
private:
    char *car_mark;
    char *car_model;
    char *car_engine;
    char *car_color;
    char *car_kpp;
public:
	car()
	{
    car_mark=new char[20];
    car_model=new char[20];
    car_engine=new char[5];
    car_color=new char[15];
    car_kpp=new char[15];
	}
    void set_mark()         ///МАРКА АВТОМОБИЛЯ
    {
        cout<<"Введите марку автомобиля: ";     gets(car_mark);
    }
    void get_mark()
    {
        for(int i=0; i<strlen(car_mark); i++)
            cout<<car_mark[i];
        cout<<" ";
    }
    void set_model()         ///МОДЕЛЬ АВТОМОБИЛЯ
    {
        cout<<"Введите модель автомобиля: ";    gets(car_model);
    }
    void get_model()
    {
        for(int i=0; i<strlen(car_model); i++)
            cout<<car_model[i];
        cout<<". ";
    }
    void set_car_engine()         ///ОБЪЕМ ДВИЖКА АВТОМОБИЛЯ
    {
        cout<<"Введите объем двигателя автомобиля: ";   gets(car_engine);
    }
    void get_car_engine()
    {
        cout<<"Объем двигателя - ";
        for(int i=0; i<strlen(car_engine); i++)
            cout<<car_engine[i];
        cout<<" л. ";
    }
    void set_color()         ///ЦВЕТ АВТОМОБИЛЯ
    {
        cout<<"Введите цвет автомобиля: ";      gets(car_color);
    }
    void get_color()
    {
        cout<<"Цвет - ";
        for(int i=0; i<strlen(car_color); i++)
            cout<<car_color[i];
        cout<<". ";
    }
    void set_kpp()         ///КОРОБКА ПЕРЕДАЧ АВТОМОБИЛЯ
    {
        cout<<"Введите тип КПП автомобиля: ";       gets(car_kpp);
    }
    void get_kpp()
    {
        cout<<"Коробка передач - ";
        for(int i=0; i<strlen(car_kpp); i++)
            cout<<car_kpp[i];
        cout<<". ";
    }
    void read_from_file()
    {
        strcpy(car_mark, first);
        strcpy(car_model, second);
        strcpy(car_engine, third);
        strcpy(car_color, forth);
        strcpy(car_kpp, fifth);
    }
    void save_in_file()
    {
    if(!strcmp(car_mark, del_mark) && !strcmp(car_model, del_model))
        return;
    ofstream outfile("BD.txt", ios::app);
        for(int i=0; i<strlen(car_mark); i++)
            outfile<<car_mark[i];
        outfile<<'$';
        for(int i=0; i<strlen(car_model); i++)
            outfile<<car_model[i];
        outfile<<'$';
        for(int i=0; i<strlen(car_engine); i++)
            outfile<<car_engine[i];
        outfile<<'$';
        for(int i=0; i<strlen(car_color); i++)
            outfile<<car_color[i];
        outfile<<'$';
        for(int i=0; i<strlen(car_kpp); i++)
            outfile<<car_kpp[i];
        outfile<<"*\n";
    outfile.close();
    }

    ~car()
    {
    delete [] car_mark;
    delete [] car_model;
    delete [] car_engine;
    delete [] car_color;
    delete [] car_kpp;
    }
};

class motorbike : public garage
{
private:
    char *motorbike_mark;
    char *motorbike_model;
    char *motorbike_engine;
    char *motorbike_power;
    char *motorbike_terrain;
public:
	motorbike()
	{
    motorbike_mark=new char[20];
    motorbike_model=new char[20];
    motorbike_engine=new char[5];
    motorbike_power=new char[5];
    motorbike_terrain=new char[20];
	}
    void set_mark()         ///МАРКА МОТОЦИКЛА
    {
        cout<<"Введите марку мотоцикла: ";          gets(motorbike_mark);
    }
    void get_mark()
    {
        for(int i=0; i<strlen(motorbike_mark); i++)
            cout<<motorbike_mark[i];
        cout<<" ";
    }
    void set_model()         ///МОДЕЛЬ МОТОЦИКЛА
    {
        cout<<"Введите модель мотоцикла: ";         gets(motorbike_model);
    }
    void get_model()
    {
        for(int i=0; i<strlen(motorbike_model); i++)
            cout<<motorbike_model[i];
        cout<<". ";
    }
    void set_moto_engine()         ///ОБЪЕМ ДВИЖКА МОТОЦИКЛА
    {
        cout<<"Введите объем двигателя мотоцикла: ";       gets(motorbike_engine);
    }
    void get_moto_engine()
    {
        cout<<"Объем двигателя - ";
        for(int i=0; i<strlen(motorbike_engine); i++)
            cout<<motorbike_engine[i];
        cout<<" л. ";
    }
    void set_power()         ///МОЩНОСТЬ МОТОЦИКЛА
    {
        cout<<"Введите мощность двигателя мотоцикла: ";     gets(motorbike_power);
    }
    void get_power()
    {
        cout<<"Мощность - ";
        for(int i=0; i<strlen(motorbike_power); i++)
            cout<<motorbike_power[i];
        cout<<" л.c. ";
    }
    void set_terrain()         ///МЕСТНОСТЬ ДЛЯ МОТОЦИКЛА
    {
        cout<<"Введите для какой местности мотоцикл: ";
        gets(motorbike_terrain);
    }
    void get_terrain()
    {
        cout<<"Для ";
        for(int i=0; i<strlen(motorbike_terrain); i++)
            cout<<motorbike_terrain[i];
        cout<<" местности.";
    }
    void read_from_file()
    {
        strcpy(motorbike_mark, first);
        strcpy(motorbike_model, second);
        strcpy(motorbike_engine, third);
        strcpy(motorbike_power, forth);
        strcpy(motorbike_terrain, fifth);
    }
    void save_in_file()
    {
    if(!strcmp(motorbike_mark, del_mark) && !strcmp(motorbike_model, del_model))
        return;
    ofstream outfile("BD.txt", ios::app);
        for(int i=0; i<strlen(motorbike_mark); i++)
            outfile<<motorbike_mark[i];
        outfile<<'$';
        for(int i=0; i<strlen(motorbike_model); i++)
            outfile<<motorbike_model[i];
        outfile<<'$';
        for(int i=0; i<strlen(motorbike_engine); i++)
            outfile<<motorbike_engine[i];
        outfile<<'$';
        for(int i=0; i<strlen(motorbike_power); i++)
            outfile<<motorbike_power[i];
        outfile<<'$';
        for(int i=0; i<strlen(motorbike_terrain); i++)
            outfile<<motorbike_terrain[i];
        outfile<<"#\n";
    outfile.close();
    }

    ~motorbike()
    {
    delete [] motorbike_mark;
    delete [] motorbike_model;
    delete [] motorbike_engine;
    delete [] motorbike_power;
    delete [] motorbike_terrain;
    }
};

class bus : public garage
{
private:
    char *bus_mark;
    char *bus_model;
    char *bus_seats;
    char *bus_all_passengers;
    char *final_destination;
public:
	bus()
	{
	bus_mark=new char[20];
    bus_model=new char[20];
    bus_seats=new char[5];
    bus_all_passengers=new char[5];
    final_destination=new char[20];
	}
    void set_mark()         ///МАРКА АВТОБУСА
    {
        cout<<"Введите марку автобуса: ";       gets(bus_mark);
    }
    void get_mark()
    {
        for(int i=0; i<strlen(bus_mark); i++)
            cout<<bus_mark[i];
        cout<<" ";
    }
    void set_model()         ///МОДЕЛЬ АВТОБУСА
    {
        cout<<"Введите модель автобуса: ";      gets(bus_model);
    }
    void get_model()
    {
        for(int i=0; i<strlen(bus_model); i++)
            cout<<bus_model[i];
        cout<<". ";
    }
    void set_seats()         ///СИДЯЧИЕ МЕСТА В АВТОБУСЕ
    {
        cout<<"Введите количество сидячих мест в автобусе: ";   gets(bus_seats);
    }
    void get_seats()
    {
        cout<<"Сидячих мест - ";
        for(int i=0; i<strlen(bus_seats); i++)
            cout<<bus_seats[i];
        cout<<". ";
    }
    void set_all_passengers()         ///ОБЩЕЕ КОЛ-ВО МЕСТ В АВТОБУСЕ
    {
        cout<<"Введите общее кол-во мест в автобусе: ";     gets(bus_all_passengers);
    }
    void get_all_passengers()
    {
        cout<<"Всего мест - ";
        for(int i=0; i<strlen(bus_all_passengers); i++)
            cout<<bus_all_passengers[i];
        cout<<". ";
    }
    void set_destination()         ///КОНЕЧНЫЙ ПУНКТ
    {
        cout<<"Введите название конечного пункта: ";    gets(final_destination);
    }
    void get_destination()
    {
        cout<<"Конечная остановка - ";
        for(int i=0; i<strlen(final_destination); i++)
            cout<<final_destination[i];
        cout<<". ";
    }
    void read_from_file()
    {
        strcpy(bus_mark, first);
        strcpy(bus_model, second);
        strcpy(bus_seats, third);
        strcpy(bus_all_passengers, forth);
        strcpy(final_destination, fifth);
    }
    void save_in_file()
    {
    if(!strcmp(bus_mark, del_mark) && !strcmp(bus_model, del_model))
        return;
    ofstream outfile("BD.txt", ios::app);
        for(int i=0; i<strlen(bus_mark); i++)
            outfile<<bus_mark[i];
        outfile<<'$';
        for(int i=0; i<strlen(bus_model); i++)
            outfile<<bus_model[i];
        outfile<<'$';
        for(int i=0; i<strlen(bus_seats); i++)
            outfile<<bus_seats[i];
        outfile<<'$';
        for(int i=0; i<strlen(bus_all_passengers); i++)
            outfile<<bus_all_passengers[i];
        outfile<<'$';
        for(int i=0; i<strlen(final_destination); i++)
            outfile<<final_destination[i];
        outfile<<"@\n";
    outfile.close();
    }

    ~bus()
    {
    delete [] bus_mark;
    delete [] bus_model;
    delete [] bus_seats;
    delete [] bus_all_passengers;
    delete [] final_destination;
    }
};

void read(car *car_mas, motorbike *moto_mas, bus *bus_mas)
{
    char *str = new char[1500];
    car_count=0;    moto_count=0;   bus_count=0;
    ofstream outfile("BD.txt", ios::app);         outfile.close();    ///чтобы создался файл
    ifstream infile("BD.txt");
    int q=0;
    while(!infile.eof())
    {
        infile>>str[q];     q++;
    }
    //infile.getline(str, 1024);
    ///                     СЧИТЫВАНИЕ ИЗ ФАЙЛА В БАЗУ
    int ii=0;
    char type;      ///Чтобы понять какой вид транспорта считываем  * - машина      #- мотоцикл      @ - автобус
    while(ii<strlen(str) && q>1)            ///q=1, когда база (блокнот) пустой
    {
        int jj=0;
        while(str[ii]!='$')
        {
            first[jj]=str[ii];
            ii++;    jj++;
        }
        ii++;    jj=0;
        while(str[ii]!='$')
        {
            second[jj]=str[ii];
            ii++;    jj++;
        }
        ii++;    jj=0;
        while(str[ii]!='$')
        {
            third[jj]=str[ii];
            ii++;    jj++;
        }
        ii++;    jj=0;
        while(str[ii]!='$')
        {
            forth[jj]=str[ii];
            ii++;    jj++;
        }
        ii++;    jj=0;
        while(str[ii]!='*' && str[ii]!='#'  && str[ii]!='@')
        {
            fifth[jj]=str[ii];
            ii++;    jj++;
        }
        type=str[ii];
        switch(type)
        {
        case '*':
            car_mas[car_count].read_from_file();
            car_count++;
            break;
        case '#':
            moto_mas[moto_count].read_from_file();
            moto_count++;
            break;
        case '@':
            bus_mas[bus_count].read_from_file();
            bus_count++;
            break;
        }
        ii++;
        memset(first,'\0',20);   memset(second,'\0',20);    memset(third,'\0',20);    memset(forth,'\0',20);    memset(fifth,'\0',20);
    }
    infile.close();
}

int main()
{
    setlocale(LC_ALL, "Rus");
    HANDLE hConsoleHandle=GetStdHandle(STD_OUTPUT_HANDLE);
    car *car_mas = new car[N];
    motorbike *moto_mas = new motorbike[N];
    bus *bus_mas = new bus[N];
    int choise1, choise2;

    while(1)
    {
        read(car_mas, moto_mas, bus_mas);
        SetConsoleTextAttribute(hConsoleHandle, 10);
        cout<<"Вы в гараже, выберите транспорт:\n1)Машина\t"<<car_count<<"\n2)Мотоцикл\t"<<moto_count<<"\n3)Автобус\t"<<bus_count<<"\n4)Удалить транспорт\n0)Выйти\n>";
        SetConsoleTextAttribute(hConsoleHandle, 15);
        cin>>choise1;
        switch(choise1)
        {
        case 1:         ///МАШИНЫ
            {
                cout<<"1)Записать в базу\n2)Вывести на экран\n>";
                cin>>choise2;
                getchar();
                switch(choise2)
                {
                case 1:
                    car_mas[car_count].set_mark();
                    car_mas[car_count].set_model();
                    car_mas[car_count].set_car_engine();
                    car_mas[car_count].set_color();
                    car_mas[car_count].set_kpp();
                    car_mas[car_count].save_in_file();
                    car_count++;
                    break;
                case 2:
                    SetConsoleTextAttribute(hConsoleHandle, 4);
                    for(int j=0; j<car_count; j++)
                    {
                        cout<<" - ";
                        car_mas[j].get_mark();
                        car_mas[j].get_model();
                        car_mas[j].get_car_engine();
                        car_mas[j].get_color();
                        car_mas[j].get_kpp();
                        cout<<endl;
                    }
                    SetConsoleTextAttribute(hConsoleHandle, 15);
                    cout<<endl;
                    system("pause");
                    break;
                }
            }
            break;
        case 2:         ///МОТОЦИКЛЫ
            {
                cout<<"1)Записать в базу\n2)Вывести на экран\n>";
                cin>>choise2;
                getchar();
                switch(choise2)
                {
                case 1:
                    moto_mas[moto_count].set_mark();
                    moto_mas[moto_count].set_model();
                    moto_mas[moto_count].set_moto_engine();
                    moto_mas[moto_count].set_power();
                    moto_mas[moto_count].set_terrain();
                    moto_mas[moto_count].save_in_file();
                    moto_count++;
                    break;
                case 2:
                    SetConsoleTextAttribute(hConsoleHandle, 4);
                    for(int j=0; j<moto_count; j++)
                    {
                        cout<<" - ";
                        moto_mas[j].get_mark();
                        moto_mas[j].get_model();
                        moto_mas[j].get_moto_engine();
                        moto_mas[j].get_power();
                        moto_mas[j].get_terrain();
                        cout<<endl;
                    }
                    SetConsoleTextAttribute(hConsoleHandle, 15);
                    cout<<endl;
                    system("pause");
                    break;
                }
            }
            break;
        case 3:         ///АВТОБУСЫ
            {
                cout<<"1)Записать в базу\n2)Вывести на экран\n>";
                cin>>choise2;
                getchar();
                switch(choise2)
                {
                case 1:
                    bus_mas[bus_count].set_mark();
                    bus_mas[bus_count].set_model();
                    bus_mas[bus_count].set_seats();
                    bus_mas[bus_count].set_all_passengers();
                    bus_mas[bus_count].set_destination();
                    bus_mas[bus_count].save_in_file();
                    bus_count++;
                    break;
                case 2:
                    SetConsoleTextAttribute(hConsoleHandle, 4);
                    for(int j=0; j<bus_count; j++)
                    {
                        cout<<" - ";
                        bus_mas[j].get_mark();
                        bus_mas[j].get_model();
                        bus_mas[j].get_seats();
                        bus_mas[j].get_all_passengers();
                        bus_mas[j].get_destination();
                        cout<<endl;
                    }
                    SetConsoleTextAttribute(hConsoleHandle, 15);
                    cout<<endl;
                    system("pause");
                    break;
                }
            }
            break;
        case 4:
            {
                getchar();
                cout<<"Ведите марку транспорта: ";
                gets(del_mark);
                cout<<"Ведите модель транспорта: ";
                gets(del_model);
                ofstream del("BD.txt");         del.close();        ///Для очистки файла
                ofstream outfile("BD.txt", ios::app);
                for(int i=0; i<car_count; i++)
                    car_mas[i].save_in_file();
                for(int i=0; i<moto_count; i++)
                    moto_mas[i].save_in_file();
                for(int i=0; i<bus_count; i++)
                    bus_mas[i].save_in_file();
                memset(del_mark,'\0',20);   memset(del_model,'\0',20);
                outfile.close();
            }
            break;
        case 0: {exit(1);}
        }
    system("cls");
    }
    delete [] car_mas;
    delete [] moto_mas;
    delete [] bus_mas;
    return 0;
}

